package com.mycompany.myapp.Coupon;

import com.codename1.capture.Capture;
import com.codename1.components.FileTree;
import com.codename1.io.ConnectionRequest;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.io.MultipartRequest;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.l10n.L10NManager;
import com.codename1.l10n.ParseException;
import com.codename1.l10n.SimpleDateFormat;
import com.codename1.ui.Button;
import com.codename1.ui.Calendar;
import com.codename1.ui.Component;
import com.codename1.ui.Image;
import com.codename1.ui.TextArea;
import com.codename1.ui.TextField;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.html.HTMLComponent;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.spinner.Picker;
import java.io.IOException;
import java.util.Date;
import service.ToolbarSideMenu;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class AjoutCoupon {

    private Form current;
    private Resources theme;
    private int user_id = 1;
     String date_fin="";
     String date_deb="", pathph="";
    TextField tftitre;
    TextField tfdes;
    TextField tfqte;
    TextField tftauxred;
    Label lbl;
    Image img;
    Component c;
Picker datePicker = new Picker();
    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }

    public void start() {
        Form f = new Form("Ajouter Coupon", BoxLayout.y());
f.setUIID("AjoutForm");
        tftitre = new TextField("", "titre");
         tftitre.setUIID("champs");
        tfdes = new TextField("", "Description");
                tfdes.setUIID("champs");

        tfqte = new TextField("", "Quantité", 4, TextField.NUMERIC);
                 tfqte.setUIID("champs");


        tfqte.setConstraint(TextField.NUMERIC);
        tftauxred = new TextField("", "Taux de Reduction");
                        tftauxred.setUIID("Title");

        datePicker.setType(Display.PICKER_TYPE_DATE);
        Picker datefin = new Picker();
        datefin.setType(Display.PICKER_TYPE_DATE);
datePicker.setUIID("champs");datefin.setUIID("champs");

        Button bnn = new Button("Photo");
        lbl = new Label();
//MultipartRequest request = new MultipartRequest();
//request.setUrl(url);
//request.addData("myFileName", fullPathToFile, "text/plain")
//NetworkManager.getInstance().addToQueue(request);

        f.add(tftitre);
        f.add(tfdes);
        f.add(tfqte);
        f.add(tftauxred);
        f.add(datePicker);
        f.add(datefin);
        f.add(bnn);
        f.add(lbl);
        //Date d = tfdate_deb.getDate();
        //Date fi = tfdate_fin.getDate();
        bnn.addActionListener((ActionEvent l) -> {
            pathph = Capture.capturePhoto(Display.getInstance().getDisplayWidth(), -1);
            if (pathph != null) {
                try {
                    img = Image.createImage(pathph);
                    lbl.setIcon(img);
                    System.out.println();
                    c.getComponentForm().revalidate();
                } catch (Exception e) {
                }
            }
        });
           SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
          
        Date today = new Date();
        String    dateu = formater.format(today);
                System.out.println(dateu);
        datePicker.addActionListener((ActionEvent l) -> {
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            date_deb = formatter.format(datePicker.getDate());
        
              if(dateu.compareTo(date_deb)>0){
                           Dialog.show("Erreur", "date debut doit etre superieur a date d ajourdhui", "Ok", null);
                           date_deb = "";
                  return;
            }

        });
       
        datefin.addActionListener((ActionEvent l) -> {
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            date_fin = formatter.format(datefin.getDate());
                 if(date_deb.compareTo(date_fin)>0){
                           Dialog.show("Erreur", "date fin doit etre superieur a date debut", "Ok", null);
                           date_fin = "";
                  return;
            }
            System.out.println(date_fin);

        });

        Button btnOk = new Button("Ajouter");

        f.add(btnOk);

        btnOk.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                 System.out.println(datePicker.getDate());
                if (tfdes.getText().equals("") || tfqte.getText().equals("") || tftauxred.getText().equals("") || tftitre.getText().equals("") ) {
                    Dialog.show("Erreurs", "Veuillez remplir tout les champs", "Ok", null);
                    return;
                }
                try {
                    Double d = Double.parseDouble(tfqte.getText());
                    Double dd = Double.parseDouble(tftauxred.getText());

                } catch (NumberFormatException ex) {
                    Dialog.show("Erreur", "Quantité ou le Taux est Incorrecte", "Ok", null);
                    return;
                }
               
                    if(Integer.parseInt(tfqte.getText())< 1 || Double.parseDouble(tftauxred.getText())< 1){
                      Dialog.show("Erreur", "Quantité est invalide", "Ok", null);
                    return;
                }
                if(date_deb.equals("")|| date_fin.equals("")){
                    Dialog.show("Confirmation", "date invalide", "Ok", null);
                    return;
                }
                 if(date_deb.equals("")|| date_fin.equals("")|| pathph.equals("")){
                    Dialog.show("Erreur", "Aucune Photo Trouvé", "Ok", null);
                return;
                 }
                System.out.println(pathph+"path"); 
                ConnectionRequest req = new ConnectionRequest();
                req.setUrl("http://localhost/pidev2017/coupon/insert.php?titre=" + tftitre.getText() + "&des=" + tfdes.getText() + "&qte=" + tfqte.getText() + "&tauxred=" + tftauxred.getText() + "&date_deb=" + date_deb + "&date_fin=" + date_fin + "&photo=" + pathph + "&user_id=" + user_id );
                req.addResponseListener(new ActionListener<NetworkEvent>() {

                    @Override
                    public void actionPerformed(NetworkEvent evt) {
                        byte[] data = (byte[]) evt.getMetaData();
                        String s = new String(data);
                        System.out.println(s);
                        if (s.equals("success")) {
                            Dialog.show("Confirmation", "Ajouté Avec succès", "Ok", null);
                            tfdes.setText("");
                            tfqte.setText("");
                            tftauxred.setText("");
                            tftitre.setText("");
                            lbl.setText("");
                            img.setImageName("");
                           
                            //new affichage().start();
                        }
                    }
                });
   
                NetworkManager.getInstance().addToQueue(req);

            }
        }); new ToolbarSideMenu().insertSetting(f, false);
   
          f.getToolbar().addCommandToSideMenu("Mes Coupons", null, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
           new MesCoupon().start();
            }
        });
            
        

        f.show();

    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }

    public void destroy() {
    }

}
