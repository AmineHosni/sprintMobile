package com.mycompany.myapp.Coupon;

    import com.codename1.components.FloatingActionButton;
    import com.codename1.components.ImageViewer;
import com.codename1.components.ScaleImageButton;
    import com.codename1.components.SpanLabel;
    import com.codename1.io.CharArrayReader;
    import com.codename1.io.ConnectionRequest;
    import com.codename1.io.JSONParser;
    import com.codename1.ui.Display;
    import com.codename1.ui.Form;
    import com.codename1.ui.Dialog;
    import com.codename1.ui.Label;
    import com.codename1.ui.plaf.UIManager;
    import com.codename1.ui.util.Resources;
    import com.codename1.io.Log;
    import com.codename1.io.NetworkEvent;
    import com.codename1.io.NetworkManager;
    import com.codename1.ui.Button;
    import com.codename1.ui.Component;
    import static com.codename1.ui.Component.BOTTOM;
    import com.codename1.ui.Container;
    import com.codename1.ui.EncodedImage;
    import com.codename1.ui.FontImage;
    import com.codename1.ui.Graphics;
    import com.codename1.ui.Image;
    import com.codename1.ui.TextArea;
    import com.codename1.ui.TextField;
import Entities.Coupon;
    import com.codename1.ui.Toolbar;
    import com.codename1.ui.URLImage;
    import com.codename1.ui.animations.CommonTransitions;
    import com.codename1.ui.events.ActionEvent;
    import com.codename1.ui.events.ActionListener;
    import com.codename1.ui.geom.Rectangle;
import com.codename1.ui.layouts.BorderLayout;
    import com.codename1.ui.layouts.BoxLayout;
    import com.codename1.ui.layouts.FlowLayout;
    import com.codename1.ui.layouts.LayeredLayout;
    import com.codename1.ui.plaf.Style;
    import java.io.IOException;
    import java.util.ArrayList;
    import java.util.List;
    import java.util.Map;
    import java.util.Random;

    /**
     * This file was generated by <a href="https://www.codenameone.com/">Codename
     * One</a> for the purpose of building native mobile applications using Java.
     */
    public class NewClass {

        private Form current;
        private Resources theme;
        private int id_user = 2;

        public void init(Object context) {
            theme = UIManager.initFirstTheme("/theme2");
            // Enable Toolbar on all Forms by default
            Toolbar.setGlobalToolbar(true);
            // Pro only feature, uncomment if you have a pro subscription
            // Log.bindCrashProtection(true);
        }

        public void start() {
            if (current != null) {
                current.show();
                return;
            }
             
    Style s = UIManager.getInstance().getComponentStyle("Title");
            Form hi = new Form(new BoxLayout(BoxLayout.Y_AXIS));
            TextField searchField = new TextField("", "Chercher"); // <1>
            
    searchField.getHintLabel().setUIID("Title");
    searchField.setUIID("Title");
    searchField.getAllStyles().setAlignment(Component.LEFT);
    hi.getToolbar().setTitleComponent(searchField);
    FontImage searchIcon = FontImage.createMaterial(FontImage.MATERIAL_SEARCH, s);
            
            ConnectionRequest con = new ConnectionRequest();
            con.setUrl("http://localhost/pidev2017/coupon/select.php?id_user=" + id_user);
            con.addResponseListener(new ActionListener<NetworkEvent>() {
                @Override
                public void actionPerformed(NetworkEvent evt) {
                    ArrayList<Coupon> coupons = getListEtudiant(new String(con.getResponseData()));
                    
                    if(coupons.size()>1){
                         
                    for (Coupon coupon : coupons) {
                        
                        EncodedImage placeholder = EncodedImage.createFromImage(Image.createImage(100, 200), true);
                        Random as = new Random();
                        String s = as.nextInt(50) + "s";
                        System.out.println(s);
                        URLImage image = URLImage.createToStorage(placeholder, coupon.getImage(), "http://localhost/eshop-master/web/images/products/" + coupon.getImage(),URLImage.RESIZE_SCALE_TO_FILL);
                        System.out.println("dzd " + coupon.getImage());
                        ImageViewer i = new ImageViewer(image);
                        Label lt = new Label(coupon.getTitre(), "TintOverlay");
                        Label ltt = new Label(coupon.getTitre());

                        
                         ScaleImageButton btn = new ScaleImageButton(image);
                        btn.setBackgroundType(Style.BACKGROUND_IMAGE_SCALED_FILL);
                     Container C1= LayeredLayout.encloseIn(btn, 
                            BorderLayout.south(lt));
                        Button bab = new Button("Voir");
                        bab.addActionListener(a -> {
                            AfficheCoupon af = new AfficheCoupon();
                            af.setTexte(coupon.getId());
                            af.start();
                            System.out.println("dsdssdsdsdsq");
                        });
                        ltt.setVisible(false);
                       C1.add(ltt);
                       hi.add(C1);
                        bab.setVisible(false);
                       
                       
                        hi.setLeadComponent(bab);

                              

    //        hi.add(picture); 
                    }
               hi.refreshTheme(); 
               }}

            });
    
            searchField.addDataChangeListener((int i1, int i2) -> { // <2>
        String t = searchField.getText();
        if(t.length() < 1) {
            for(Component cmp : hi.getContentPane()) {
                cmp.setHidden(false);
                cmp.setVisible(true);
            }
        } else {
            t = t.toLowerCase();
            for(Component cmp : hi.getContentPane()) {
                String val = null;
                if(cmp instanceof Label) {
                    val = ((Label)cmp).getText();
                } else {
                    if(cmp instanceof Container) {
                     Component  v = ((Container) cmp).getComponentAt(2);
                     if(v instanceof Label){
                         val=   ((Label)v).getText();
                                         System.out.println(val+"ok");}

                    } else {
                        val = (String)cmp.getPropertyValue("text");
                    }
                }
                boolean show = val != null && val.toLowerCase().indexOf(t) > -1;
                cmp.setHidden(!show); // <3>
                cmp.setVisible(show);


            }
        }
        hi.getContentPane().animateLayout(250);
   
    });
    
            NetworkManager.getInstance().addToQueue(con);
         
     
            
           hi.getToolbar().addCommandToRightBar("", searchIcon, (e) -> {
        searchField.startEditingAsync(); // <4>
    });
        
         
       Image img= null;
       
       try {
      img = Image.createImage("/add-icon-3.png");
                
} catch(IOException err) {
    Log.e(err);
}
     

hi.getToolbar().addCommandToRightBar("", img.scaled(30, 30), e -> new AjoutCoupon().start());
        
hi.show();

        }

        public ArrayList<Coupon> getListEtudiant(String json) {
            ArrayList<Coupon> listEtudiants = new ArrayList<>();

            try {

                JSONParser j = new JSONParser();

                Map<String, Object> etudiants = j.parseJSON(new CharArrayReader(json.toCharArray()));

                System.out.println();
                List<Map<String, Object>> list = (List<Map<String, Object>>) etudiants.get("etudiant");
                
                for (Map<String, Object> obj : list) {
                    Coupon e = new Coupon();
                    e.setTitre(obj.get("titre").toString());
                    e.setDescription(obj.get("description").toString());
                    e.setImage(obj.get("image").toString());
                    e.setId(Integer.parseInt(obj.get("id_coupon").toString()));
                    System.out.println(obj.get("id_coupon").toString());
                    listEtudiants.add(e);

                }

            } catch (IOException ex) {
            }
            return listEtudiants;

        }

        public void stop() {
            current = Display.getInstance().getCurrent();
            if (current instanceof Dialog) {
                ((Dialog) current).dispose();
                current = Display.getInstance().getCurrent();
            }
        }

        public void destroy() {
        }

    }
