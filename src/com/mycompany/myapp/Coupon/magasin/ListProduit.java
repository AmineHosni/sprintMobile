package com.mycompany.myapp.Coupon.magasin;

import Entities.Produit;
import com.codename1.io.ConnectionRequest;
import com.codename1.ui.Form;
import com.codename1.ui.Label;
import com.codename1.ui.util.Resources;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.Image;
import com.codename1.ui.Toolbar;

import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.plaf.UIManager;
import com.mycompany.myapp.produit.AfficherProduit;
import java.io.IOException;
import java.util.ArrayList;
import service.ProduitService;
import service.ToolbarSideMenu;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class ListProduit {

    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    Form hi;

    public ListProduit(Resources theme) {
        System.out.println("List Produit");
        hi = new Form("Liste Produits");
        hi.setLayout(new BoxLayout(BoxLayout.Y_AXIS));
        new ToolbarSideMenu().insertSetting(hi, false);
        hi.show();

        ConnectionRequest con = new ConnectionRequest();
        con.setUrl("http://localhost/pidev2017/magasin/selectProduit.php");
        con.addResponseListener(new ActionListener<NetworkEvent>() {
            Container container;
            Container detailsContainer;

            @Override
            public void actionPerformed(NetworkEvent evt) {
                ArrayList<Produit> produits = new ProduitService().getListProduits(new String(con.getResponseData()));
                for (Produit produit : produits) {
                    try {
                        container = new Container(new FlowLayout());
                        container.add(new Label(Image.createImage("/frigi.png").scaled(46, 46)));
                        detailsContainer = new Container(new BoxLayout(BoxLayout.Y_AXIS));
                        detailsContainer.add(new Label(produit.getLibelle()));
                        detailsContainer.add(produit.getEtat());
                        container.add(detailsContainer);
                        Button b = new Button();
                        b.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent evt) {
                                new AfficherProduit().start(produit.getId(), false);
                                System.out.println(".actionPerformed()");
                            }

                        });
                        b.setVisible(false);
                        container.add(b);
                        detailsContainer.setLeadComponent(b);
                    } catch (IOException ex) {
                    }
                    hi.add(container);
                    hi.refreshTheme();
                }

            }
        }
        );
        NetworkManager.getInstance().addToQueue(con);
    }

    public Form getF() {
        return hi;
    }

    public void show() {

        hi.show();
    }

}
