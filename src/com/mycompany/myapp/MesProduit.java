package com.mycompany.myapp;

import Entities.Produit;
import com.codename1.io.ConnectionRequest;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.Image;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.GridLayout;
import java.io.IOException;
import java.util.ArrayList;
import service.ProduitService;
import service.habchkleu;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MesProduit {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");
        Toolbar.setGlobalToolbar(true);

    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
        
        
        Form hi = new Form("Hi World");
        hi.setLayout(new GridLayout(2, 2));
        new habchkleu().insertHabchkleu(hi,false);
        hi.show();
        ConnectionRequest con = new ConnectionRequest();
        con.setUrl("http://localhost/pidev2017/select.php");
        con.addResponseListener(new ActionListener<NetworkEvent>() {
            @Override
            public void actionPerformed(NetworkEvent evt) {
                ArrayList<Produit> produits = new ProduitService().getListProduits(new String(con.getResponseData()));
                for(Produit produit : produits) {
                    if (produit.getSeller()==9) {
                        try {
                        Container container = new Container(new FlowLayout());
                        container.add(new Label(Image.createImage("/frigi.png").scaled(46, 46)));
                        Container detailsContainer = new Container(new BoxLayout(2));
                        detailsContainer.add(new Label(produit.getLibelle()));
                        detailsContainer.add(produit.getPrixProduit().toString());
                        container.add(detailsContainer);
                        Button b = new Button(produit.getLibelle());
                        b.addActionListener(e -> {
                            new AfficherProduit().start(produit.getId(),true);
                        });
                        b.setHidden(true);
                        container.add(b);
                        container.setLeadComponent(b);
                        hi.add(container);
                    } catch (IOException ex) {
                    }
                    }
                    
                }
                hi.refreshTheme();
            }
        });
        NetworkManager.getInstance().addToQueue(con);
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }

    public void destroy() {
    }

}
