/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.myapp.produit;
import Entities.Produit;
import com.codename1.io.ConnectionRequest;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.Dialog;
import com.codename1.ui.Display;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.Form;
import com.codename1.ui.Image;
import com.codename1.ui.Label;
import com.codename1.ui.TextField;
import com.codename1.ui.Toolbar;
import com.codename1.ui.URLImage;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import java.io.IOException;
import java.util.ArrayList;
import service.ProduitService;
import service.ToolbarSideMenu;

/**
 *
 * @author MBM info
 */
public class Search {
    
/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */

    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");
        Toolbar.setGlobalToolbar(true);

    }

    public void start(String search) {
        if (current != null) {
            current.show();
            return;
        }

        Form hi = new Form();
        TextField txtSearch = new TextField();
        txtSearch.setHint("Search Produit");
        hi.setLayout(new BoxLayout(BoxLayout.Y_AXIS));
        hi.add(txtSearch);
        
        hi.add(new Label("Les Produits"));
        new ToolbarSideMenu().insertSetting(hi, false);
        hi.show();
        ConnectionRequest con = new ConnectionRequest();
        con.setUrl("http://localhost/pidev2017/produit/select.php");
        con.addResponseListener(new ActionListener<NetworkEvent>() {
            Container LesProduits = new Container(new BoxLayout(BoxLayout.X_AXIS));
            
            @Override
            public void actionPerformed(NetworkEvent evt) {
                LesProduits.setScrollableX(true);
                LesProduits.setScrollableY(false);
                LesProduits.removeAll();
                LesProduits.repaint();
                ArrayList<Produit> produits = new ProduitService().getListProduitsRecherche(new String(con.getResponseData()),search);
                
                for (Produit produit : produits) {
                    
                       try {
                        
                        Container containerProduit = new Container(new BoxLayout(BoxLayout.Y_AXIS));
                        EncodedImage placeholder = EncodedImage.createFromImage(Image.createImage("/error.jpg"), false);
                        Image image = URLImage.createToStorage(placeholder, "magasin+" + "/frigi.png", "http://localhost/pidev2017/image/" + "/frigi.png");
                        //    new Label(Image.createImage("").scaled(60, 60))
                        containerProduit.add(image.scaled(100, 100));
                        
                        Container detailsContainer = new Container(new BoxLayout(BoxLayout.Y_AXIS));
                        detailsContainer.add(new Label(produit.getLibelle()));
                        detailsContainer.add(produit.getPrixProduit().toString());
                        containerProduit.add(detailsContainer);
                        Button b = new Button(produit.getLibelle());
                        b.addActionListener(e -> {
                            new AfficherProduit().start(produit.getId(),false);
                        });
                        b.setHidden(true);
                        containerProduit.add(b);
                        containerProduit.setLeadComponent(b);
                        LesProduits.add(containerProduit);

                    } catch (IOException ex) {
                    }
                
                hi.add(LesProduits);
                hi.refreshTheme();
            }
       
 
                    } 
        });
        NetworkManager.getInstance().addToQueue(con);
                   
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }

    public void destroy() {
    }

}
